@model IEnumerable<BusinessLogicLayer.Viewmodels.Colors.ColorVM>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}

<h1>Danh sách màu</h1>

<a asp-action="Create" class="btn btn-primary createbtn">Tạo mới</a>

<table id="table" class="table">
    <thead>
        <tr>
            <th>
@*                 @Html.DisplayNameFor(model => model.Name)
 *@                Tên
            </th>
            <th>
@*                 @Html.DisplayNameFor(model => model.Description)
 *@                Mô tả
            </th>
            <th>
@*                 @Html.DisplayNameFor(model => model.Status)
 *@                Trạng thái
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    @if (item.Status == 1)
                    {
                        <td>Hoạt động</td>
                    }
                    else
                    {
                        <td>Không hoạt động</td>
                    }
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-warning editbtn">Sửa</a> |
                        <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-info">Chi tiết</a> |
                        <a asp-action="ChangeStatus" asp-route-id="@item.ID" class="btn btn-outline-info changebtn">Đổi trạng thái</a>
                    </td>
                </tr>

            }
        }
    </tbody>
</table>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Khởi tạo DataTables
        var table = new DataTable('#table');
    });

    // Hàm xử lý khi người dùng nhấn vào nút Create hoặc Edit
    function handleSimpleAction(event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a

        const url = this.href;

        fetch(url, {
            method: 'GET'
        })
            .then(response => {
                if (response.status === 403) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Không có quyền!',
                        text: 'Bạn không có quyền thực hiện hành động này.'
                    });
                    throw new Error('Forbidden');
                } else if (response.ok) {
                    window.location.href = url; // Chuyển hướng nếu yêu cầu thành công
                } else {
                    return response.text().then(text => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: text || 'Có lỗi xảy ra khi gửi yêu cầu.'
                        });
                        throw new Error(text);
                    });
                }
            })
            .catch(error => {
                console.error("Fetch error:", error.message);
            });
    }

    // Hàm xử lý khi người dùng nhấn vào nút ChangeStatus
    function handleChangeStatus(event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của thẻ a

        Swal.fire({
            title: 'Bạn có chắc chắn muốn đổi trạng thái màu này?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'OK',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                const url = this.href;

                fetch(url, {
                    method: 'GET'
                })
                    .then(response => {
                        if (response.status === 403) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Không có quyền!',
                                text: 'Bạn không có quyền thực hiện hành động này.'
                            });
                            throw new Error('Forbidden');
                        } else if (response.ok) {
                            return response.text();
                        } else {
                            return response.text().then(text => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi!',
                                    text: text || 'Có lỗi xảy ra khi gửi yêu cầu.'
                                });
                                throw new Error(text);
                            });
                        }
                    })
                    .then(text => {
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công!',
                            text: 'Trạng thái màu thay đổi thành công.'
                        }).then(() => {
                            window.location.href = '@Url.Action("Index")';
                        });
                    })
                    .catch(error => {
                        console.error("Fetch error:", error.message);
                    });
            }
        });
    }

    // Áp dụng cho các nút Create và Edit
    document.querySelectorAll(".createbtn, .editbtn").forEach(function (button) {
        button.addEventListener("click", handleSimpleAction);
    });

    // Áp dụng cho nút ChangeStatus
    document.querySelectorAll(".changebtn").forEach(function (button) {
        button.addEventListener("click", handleChangeStatus);
    });
</script>

