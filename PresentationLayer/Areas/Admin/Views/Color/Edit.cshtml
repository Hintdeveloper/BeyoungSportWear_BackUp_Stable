@model BusinessLogicLayer.Viewmodels.Colors.ColorUpdateVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}

<h1>Sửa thông tin màu sắc</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" id="editForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label">Status</label>
                <select asp-for="Status" class="form-control">
                    <option value="0">Không hoạt động</option>
                    <option value="1">Hoạt động</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-link">Back to List</a>
</div>
<script>
    document.getElementById("editForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của form

        Swal.fire({
            title: 'Bạn có chắc chắn muốn sửa thông tin màu này?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'OK',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Tạo FormData từ form
                var formData = new FormData(this);

                // Gửi yêu cầu AJAX
                fetch('@Url.Action("Edit")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Nếu server trả về redirect, xử lý thông báo thành công
                            return response.text(); // Đọc phản hồi dưới dạng văn bản
                        } else {
                            // Nếu có lỗi, đọc phản hồi dưới dạng văn bản và hiển thị thông báo lỗi
                            return response.text().then(text => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi!',
                                    text: text || 'Có lỗi xảy ra khi gửi yêu cầu.'
                                });
                                throw new Error(text);
                            });
                        }
                    })
                    .then(text => {
                        // Nếu phản hồi thành công, hiển thị thông báo thành công
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công!',
                            text: 'Danh mục hàng đã được tạo thành công'
                        }).then(() => {
                            // Chuyển hướng sau khi hiển thị thông báo thành công
                            window.location.href = '@Url.Action("Index")';
                        });
                    })
                    .catch(error => {
                        console.error("Fetch error:", error.message);
                    });
            }
        });

    });

</script>


