@model BusinessLogicLayer.Viewmodels.ApplicationUser.UserUpdateVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}

<h1>Sửa thông tin nhân viên</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" id="editForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FirstAndLastName" class="control-label">Họ và tên</label>
                <input asp-for="FirstAndLastName" class="form-control" />
                <span asp-validation-for="FirstAndLastName" class="text-danger"></span>
            </div>

            <!-- Hiển thị URL hình ảnh nếu cần -->
            @if (Model.Images != null)
            {
                <div class="form-group">
                    <label>Ảnh hiện tại:</label><br />
                    <img src="@Model.Images" alt="User Image" style="max-width: 200px;" />
                </div>
            }

            <div class="form-group">
                <label asp-for="Gender" class="control-label">Giới tính</label>
                <select asp-for="Gender" class="form-control">
                    <option value="">Chọn giới tính</option>
                    <option value="0">Nam</option>
                    <option value="1">Nữ</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label">Ngày sinh</label>
                <input asp-for="DateOfBirth" class="form-control" type="date" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label">Số điện thoại</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

@*             <div>
                <label for="city">Thành phố:</label>
                <select id="city" class="form-control" asp-for="AddressUpdateVM.City"></select>
            </div>

            <div>
                <label for="districtCounty">Quận/Huyện:</label>
                <select id="district" class="form-control" asp-for="AddressUpdateVM.DistrictCounty"></select>
            </div>

            <div>
                <label for="commune">Phường/Xã:</label>
                <select id="ward" class="form-control" asp-for="AddressUpdateVM.Commune"></select>
            </div> *@

@*             <div class="form-group">
                <label asp-for="AddressUpdateVM.SpecificAddress" class="control-label">Địa chỉ cụ thể</label>
                <input asp-for="AddressUpdateVM.SpecificAddress" class="form-control" />
                <span asp-validation-for="AddressUpdateVM.SpecificAddress" class="text-danger"></span>
            </div>
 *@
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-link">Back to List</a>
</div>
<script src="~/ajax/address.js"></script>
<script>
    document.getElementById("editForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của form

        Swal.fire({
            title: 'Bạn có chắc chắn muốn sửa thông tin khách hàng này?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'OK',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Tạo FormData từ form
                var formData = new FormData(this);

                // Gửi yêu cầu AJAX
                fetch('@Url.Action("Edit")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công!',
                                text: data.message
                            }).then(() => {
                                window.location.href = '@Url.Action("Index")';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi!',
                                text: data.message
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: 'Có lỗi xảy ra khi gửi yêu cầu.'
                        });
                    });
            }
        });

    });

</script>

