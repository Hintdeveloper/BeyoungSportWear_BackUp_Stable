@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model BusinessLogicLayer.Viewmodels.ApplicationUser.RegisterUser
@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}

<h1>Thêm khách hàng mới</h1>
<hr />
<div class="row">
    <div class="col-md-4">

        <form asp-action="Create" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstAndLastName" class="control-label">Họ và tên</label>
                <input asp-for="FirstAndLastName" class="form-control" />
                <span asp-validation-for="FirstAndLastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label">Giới tính</label>
                <select asp-for="Gender" class="form-control">
                    <option value="">Chọn giới tính</option>
                    <option value="0">Nam</option>
                    <option value="1">Nữ</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label">Ngày sinh</label>
                <input asp-for="DateOfBirth" class="form-control" type="date" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Username" class="control-label">Username</label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label">PhoneNumber</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <div>
                <label for="city">Thành phố:</label>
                <select id="city" class="form-control" asp-for="City"></select>
            </div>

            <div>
                <label for="districtCounty">Quận/Huyện:</label>
                <select id="district" class="form-control" asp-for="DistrictCounty"></select>
            </div>

            <div>
                <label for="commune">Phường/Xã:</label>
                <select id="ward" class="form-control" asp-for="Commune"></select>
            </div>

            <div class="form-group">
                <label asp-for="SpecificAddress" class="control-label">Địa chỉ cụ thể</label>
                <input asp-for="SpecificAddress" class="form-control" />
                <span asp-validation-for="SpecificAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-link">Back to List</a>
</div>
<script src="/ajax/address.js"></script>
<script>
    document.getElementById("createForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Ngăn chặn hành vi mặc định của form

        Swal.fire({
            title: 'Bạn có chắc chắn muốn thêm người dùng này?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'OK',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Tạo FormData từ form
                var formData = new FormData(this);

                // Gửi yêu cầu AJAX
                fetch('@Url.Action("Create")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Nếu server trả về redirect, xử lý thông báo thành công
                            return response.text(); // Đọc phản hồi dưới dạng văn bản
                        } else {
                            // Nếu có lỗi, đọc phản hồi dưới dạng văn bản và hiển thị thông báo lỗi
                            return response.text().then(text => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi!',
                                    text: text || 'Có lỗi xảy ra khi gửi yêu cầu.'
                                });
                                throw new Error(text);
                            });
                        }
                    })
                    .then(text => {
                        // Nếu phản hồi thành công, hiển thị thông báo thành công
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công!',
                            text: 'Danh mục hàng đã được tạo thành công'
                        }).then(() => {
                            // Chuyển hướng sau khi hiển thị thông báo thành công
                            window.location.href = '@Url.Action("Index")';
                        });
                    })
                    .catch(error => {
                        console.error("Fetch error:", error.message);
                    });
            }
        });

    });

</script>
