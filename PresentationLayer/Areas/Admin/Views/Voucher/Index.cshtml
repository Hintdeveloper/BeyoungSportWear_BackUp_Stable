@using System.Globalization
@using static DataAccessLayer.Entity.Voucher
@using static DataAccessLayer.Entity.Base.EnumBase
 @model IEnumerable<BusinessLogicLayer.Viewmodels.VoucherM.GetAllVoucherVM>
 @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
<h2>Quản lí voucher</h2>
<div class="row element-button">
    <div class="col-md-2">
        <a class="btn btn-add btn-sm" asp-area="Admin" asp-controller="Voucher" asp-action="Create" title="Thêm">
            <i class="fas fa-plus"></i>
            Tạo mới voucher
        </a>
        
    </div>
    <div class="col-sm-4">
        <form id="searchForm" method="get" action="@Url.Action("SearchVouchers", "Voucher", new { area = "Admin" })">
            <div class="input-group">
                <input type="text" name="input" class="form-control" placeholder="Tìm kiếm theo mã hoặc tên" />
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">Tìm kiếm</button>
                </div>
            </div>
        </form>
    </div>
</div>
<table id="voucherTable" class="table">
    <thead>
        <tr>

            <th>
               STT 
            </th>
            <th>
                Mã voucher
            </th>
            <th>
                Tên voucher
            </th>
            <th>
                Ngày bắt đầu
            </th>
            <th>
                Ngày kết thúc
            </th>
            <th>
                Số lượng
            </th>
            <th>
                Loại giảm giá
            </th>
            <th>
                Gỉam tối thiểu
            </th>
            <th>
                Gỉam tối đa
            </th>
            <th>
                Số tiền giảm
            </th>
            <th>
                Trạng thái hoạt động
            </th>
            
           @*  <th>
                Trạng thái hoạt động
            </th> *@
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @count
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @if (item.Type == Types.Percent)
                    {
                        <text>Phần trăm</text>
                    }
                    else if (item.Type == Types.Cash)
                    {
                        <text>Tiền mặt</text>
                    }
                    else
                    {
                        <text>Không xác định</text>
                    }
                </td>
                <td>
                    @item.MinimumAmount.ToString("N0", new CultureInfo("vi-VN")) . " VNĐ"
                </td>
                <td>
                    @item.MaximumAmount.ToString("N0", new CultureInfo("vi-VN")) . " VNĐ"
                </td>
                <td>
                    @if (item.Type == Types.Percent)
                    {
                        @Html.Raw(item.ReducedValue.ToString("N0") + " %")
                    }
                    else if (item.Type == Types.Cash)
                    {
                        @Html.Raw(item.ReducedValue.ToString("N0", new CultureInfo("vi-VN")) + " VNĐ")
                    }
                    else
                    {
                        <text>Không xác định</text>
                    }
                </td>
                <td>
                    @if (item.IsActive.HasValue)
                    {
                        switch (item.IsActive.Value)
                        {
                            case StatusVoucher.HasntStartedYet:
                                <span>Chưa bắt đầu</span>
                                break;
                            case StatusVoucher.IsBeginning:
                                <span>Đang diễn ra</span>
                                break;
                            case StatusVoucher.Finished:
                                <span>Đã kết thúc</span>
                                break;
                        }
                    }
                </td>
                @* <td>
                    @if (item.Status == 0)
                    {
                        <text>Không hoạt động</text>
                    }
                    else if (item.Status == 1)
                    {
                        <text>Đang hoạt động</text>
                    }
                    else
                    {
                        <text>Không xác định</text>
                    }
                </td> *@
                <td>
                    @if (item.IsActive != StatusVoucher.Finished)
                    {
                        <a asp-action="UpdateVoucherUser" asp-controller="Voucher" asp-route-id="@item.ID" class="btn btn-primary btn-sm edit" title="Sửa">
                            <i class="fas fa-edit"></i>
                        </a>
                    }
                    
                    @* <a asp-action="Update" asp-controller="Voucher" asp-route-id="@item.ID" class="btn btn-primary btn-sm edit" title="Sửa">
                        <i class="fas fa-edit"></i>
                    </a> *@
                    <a asp-action="Detail" asp-controller="Voucher" asp-route-id="@item.ID" class="btn btn-primary btn-sm view" type="button" title="Xem chi tiết">
                        <i class="fas fa-eye"></i>
                    </a>
                    @* <form asp-action="Delete" asp-controller="Voucher" method="post" id="deleteForm-@item.ID" style="display:inline;">
                        <input type="hidden" name="id" value="@item.ID" />
                        <button type="submit" class="btn btn-primary btn-sm trash" title="Ẩn bán" onclick="return confirmDelete();">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </form> *@

                    <form asp-action="ToggleStatus" asp-controller="Voucher" asp-route-id="@item.ID" method="post" id="toggleForm-@item.ID" style="display:inline;">
                        <input type="hidden" name="id" value="@item.ID" />

                        <input style="display: none;" type="checkbox" id="toggle-@item.ID" onchange="toggleVoucherStatus('@item.ID');"
                        @(item.IsActive == StatusVoucher.HasntStartedYet || item.IsActive == StatusVoucher.IsBeginning ? "checked" : "") />
                        <label for="toggle-@item.ID" class="btn btn-primary btn-sm">
                            <i id="toggleIcon-@item.ID" class="fas @(item.IsActive == StatusVoucher.HasntStartedYet || item.IsActive == StatusVoucher.IsBeginning ? "fa-toggle-on" : "fa-toggle-off")"></i>
                        </label>
                    </form>
                </td>
                
            </tr>
            count++;
        }
    </tbody>
</table>
<script type="text/javascript">
    function confirmDelete() {
        return confirm("Bạn có chắc chắn muốn xóa không?");
    }

    function updateStatus(id) {
        const statusInput = document.getElementById(`statusInput-${id}`);
        const checkbox = document.getElementById(`toggle-${id}`);

        if (checkbox.checked) {
            // Nếu checkbox được chọn, giá trị là 1
            statusInput.value = 1; // IsBeginning
        } else {
            // Nếu checkbox không được chọn, giá trị là 2
            statusInput.value = 2; // Finished
        }

        document.getElementById(`toggleForm-${id}`).submit();
    }

    function toggleVoucherStatus(id) {
        var form = document.getElementById('toggleForm-' + id);
        form.submit();
    }
    
    
    function autoUpdateVoucherStatus() {
        $.ajax({
            url: 'https://localhost:7241/api/VoucherM/update-status', 
            type: 'POST',
            success: function (response) {
                console.log(response.message); 
                refreshVoucherStatus();
            },
            error: function (xhr, status, error) {
                console.error('Error updating voucher status:', error);
            }
        });
    }

    function refreshVoucherStatus() {
        $.ajax({
            url: '/Admin/Voucher/GetAllVouchers', 
            type: 'GET',
            success: function (data) {
                
                $('#voucherTable').html(data); 
            },
            error: function (xhr, status, error) {
                console.error('Error refreshing voucher list:', error);
            }
        });
    }

    
    setInterval(autoUpdateVoucherStatus, 1); 
</script>