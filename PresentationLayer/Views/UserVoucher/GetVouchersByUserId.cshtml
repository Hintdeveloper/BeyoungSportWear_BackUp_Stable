@using BusinessLogicLayer.Viewmodels.VoucherM
@using static DataAccessLayer.Entity.Voucher
@model IEnumerable<VoucherViewModel>

@{
    ViewData["Title"] = "Danh sách Voucher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" style="display: flex; flex-wrap: wrap; justify-content: space-between; padding: 20px;">
    <h2 style="color: #333; width: 100%; margin-bottom: 20px; text-align: center;">Danh sách ưu đãi của bạn</h2>
    @foreach (var item in Model)
    {
        var timeLeftInSeconds = (item.EndDate - DateTime.Now).TotalSeconds;

        <div class="card" style="width: 30%; margin-bottom: 20px; border: 1px solid #ddd; box-shadow: 0 4px 8px rgba(0,0,0,0.1); border-radius: 10px; padding: 15px; transition: transform 0.3s ease;">
            <div class="card-header" style="display: flex; align-items: center; margin-bottom: 10px;">
                <i class="fa fa-gift" style="font-size: 24px; margin-right: 10px; color: #ff6b6b;"></i>
                <div class="card-title" style="font-weight: bold; font-size: 18px;">Ưu đãi: @Html.DisplayFor(modelItem => item.Name)</div>
            </div>

            <div class="card-body" style="font-size: 14px; line-height: 1.5;">
                <div class="status @(item.Status == 1 ? "status-used" : "status-expired")" style="margin-top: 5px;">
                    @if (item.Status == 1)
                    {
                        <span style="color: green; font-weight: bold;">Đã sử dụng</span>
                    }
                    else
                    {
                        <span style="color: red; font-weight: bold;">Chưa sử dụng</span>
                    }
                </div>
                <p><strong>Mã Voucher:</strong> @item.Code</p>
                <p>
                    <strong>Giảm:</strong>
                    @if (item.Type == Types.Percent)
                    {
                        @($"{Currency.FormatCurrency(item.ReducedValue.ToString())} %")
                    }
                    else
                    {
                        @($"{Currency.FormatCurrency(item.ReducedValue.ToString())} đ")
                    }
                </p>
                <p><strong>Đơn hàng tối thiểu:</strong> @Currency.FormatCurrency(item.MinimumAmount.ToString()) đ</p>
                <p><strong>Giảm tối đa:</strong> @Currency.FormatCurrency(item.MaximumAmount.ToString()) đ</p>
                <p><strong>Bắt đầu:</strong> @item.StartDate.ToString("dd/MM/yyyy HH:mm:ss")</p>
                <p><strong>Kết thúc:</strong> @item.EndDate.ToString("dd/MM/yyyy HH:mm:ss")</p>
                <p><strong>Số lượng còn lại:</strong> @item.Quantity</p>
            </div>

            <div class="card-footer" style="background-color: #f8f9fa; text-align: center; padding: 10px; border-top: 1px solid #ddd;">
                <strong>Hạn sử dụng còn:</strong> <span id="time-left-@item.ID">@item.DaysLeft ngày</span>
            </div>
        </div>

        <script>
            (function () {
                var timeLeft = @timeLeftInSeconds;

                function updateTimeLeft() {
                    if (timeLeft <= 0) {
                        document.getElementById("time-left-@item.ID").innerText = "Đã hết hạn";
                        return;
                    }

                    var days = Math.floor(timeLeft / (60 * 60 * 24));
                    var hours = Math.floor((timeLeft % (60 * 60 * 24)) / (60 * 60));
                    var minutes = Math.floor((timeLeft % (60 * 60)) / 60);
                    var seconds = Math.floor(timeLeft % 60);

                    document.getElementById("time-left-@item.ID").innerText =
                        days + " ngày " + hours + " giờ " + minutes + " phút " + seconds + " giây";

                    timeLeft--;
                }

                setInterval(updateTimeLeft, 1000);
            })();
        </script>
    }
    
</div>
